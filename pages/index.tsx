import type { NextPage } from "next";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Image from "next/image";

import Header from "../components/Header";
import Footer from "../components/Footer";
import UserList from "../components/User/UserList";

import person from "../public/img/person.svg";
import person2 from "../public/img/person2.svg";

import { fetchUsers } from "../api/user";
import { UsersResponse } from "../types";

interface Props {
  usersResponse: UsersResponse;
}

const Home: NextPage<Props> = ({ usersResponse }) => {
  const [opacity, setOpacity] = useState("opacity-0");
  const router = useRouter();

  useEffect(() => {
    setOpacity("opacity-100");
  }, []);

  const goToUserProfile = (href: string) => {
    setOpacity("opacity-0");
    setTimeout(() => router.push(href), 300);
  };

  return (
    <div className="p-8 bg-slate-50">
      <Head>
        <title>User List - Prueba - misfans</title>
        <meta name="Prueba para misfans" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={`transition-opacity duration-300 ease-in ${opacity}`}>
        <Header />
        <div className="flex flex-col justify-center items-center py-4">
          <h1 className="text-4xl font-bold m-4 text-gray-800">Find People</h1>
          <p className="text-2xl font-bold text-center text-gray-400">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
          <div className="flex flex-row justify-center items-center py-4">
            <Image src={person2} layout="fixed" width={180} height={180} />
            <Image src={person} layout="fixed" width={180} height={180} />
          </div>
        </div>
        <UserList usersResponse={usersResponse} goToUserProfile={goToUserProfile} />
        <Footer />
      </div>
    </div>
  );
};

export const getStaticProps = async () => {
  let usersResponse: UsersResponse = { data: [], total: 0, page: 0, limit: 0 };
  try {
    const res = await fetchUsers();
    if (res.error) throw new Error(res.error);
    usersResponse = res;
  } catch (error) {
    console.log("FETCH_USERS_ERROR: ", error);
  }

  return {
    props: { usersResponse },
  };
};

export default Home;
